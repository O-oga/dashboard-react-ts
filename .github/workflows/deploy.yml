name: Build and Deploy to Portainer (Webhook)

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/${{ github.event.repository.name }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert repository name to lowercase
        id: repo
        run: |
          echo "repo_lower=$(echo '${{ env.IMAGE_NAME }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.repo.outputs.repo_lower }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Portainer via Webhook
        env:
          PORTAINER_WEBHOOK_URL: ${{ secrets.PORTAINER_WEBHOOK_URL }}
        run: |
          set -e
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ webhook URL
          if [ -z "$PORTAINER_WEBHOOK_URL" ]; then
            echo "‚ùå Error: PORTAINER_WEBHOOK_URL is not set!"
            echo "üìù Please add PORTAINER_WEBHOOK_URL to GitHub Secrets"
            echo "   Settings ‚Üí Secrets and variables ‚Üí Actions ‚Üí New repository secret"
            exit 1
          fi
          
          echo "üöÄ Triggering Portainer webhook..."
          echo "URL: ${PORTAINER_WEBHOOK_URL}"
          
          # –í—ã–∑—ã–≤–∞–µ–º webhook
          RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "$PORTAINER_WEBHOOK_URL" 2>&1)
          
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | head -n-1)
          
          if [ "$HTTP_CODE" -ge 200 ] && [ "$HTTP_CODE" -lt 300 ]; then
            echo "‚úÖ Webhook triggered successfully!"
            echo "Response: $BODY"
          else
            echo "‚ùå Failed to trigger webhook. HTTP Code: $HTTP_CODE"
            echo "Response: $BODY"
            exit 1
          fi

